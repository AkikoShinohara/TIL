・ナビゲーションメニューの時は　→<nav> ナビゲーションメニュー</nav>
・記事グループを表現する時 <section>
                                             ニュース
　　　　　　　　　　　　　　　<div class=“article”>記事</div>
                                             <div class=“article”>記事</div>
                                          </section> 
・記事を表現するためには[article]タグを利用する　→単独で自己完結するコンテンツを表す（ブログの記事やコメントなど独立したコンテンツが該当する）
・[aside]　→ 著者のプロフィール関連リンクなど（広告とメインコンテンツの関連性のあまりないセクションを表すため）
・[mark]   → 参照目的で文字をハイライトさせるために使う・ユーザーに分かりやすくアクションを起こしてもらいたいためにハイライトさせる
・[abbr + title]    → マウスカーソルを合わせると少し時間が経った際に説明が表示される（Safari, Edge どのいくつかのブラウザではabbrタグに下線スタイルがありません) <p>< abbr title=“ここに説明させたい文章”></abbr>　→ LGTM
・[ruby + rp + rt] → 文字にふりがなを振るためのタグ・文字全体を<ruby></ruby> で囲みフリガナを<rt></rt>の中に設定をする
　　　　　                 <ruby> 
                                   個人的<rp>(</rp><rt>こじんてき</rt><rp>)</rp>  →　個人的（こじんてき）
                               </ruby>
・[time datetime=“日付”</time>] → <div class=“published-date”>日付</div> → divタグには意味がないため機械には日時として判別することができない
　                                                     time タグは、機械が日付として読める形で提供するようになったタグ
                                                        Datetime 属性は、この要素の日時を設定する
・[figure・figcaption] → 図形を表現するためのタグ・メインコンテンツなどか参考文献として参照される図表を含める（自己完結しているコンテンツを囲むタグ）このタグの部分を取り除けても文書の流れに影響を与えないコンテンツに使用
　                cssでも様々な図形などを作ることができるようになってきて、検索エンジンが画像だと認識できないようになった、<img>タグ以外にも画像だと認識できるよにするため作られたが、<figure>タグ
                  SEO対策の一つでもある　これらのタグを使うことで文書構造が分かりやすく検索エンジン最適化になる
                  figcaptionタグ　→ figureタグの子要素として使用しなければならない（図形の説明を表現する）

【 入力フォーム 】
・[input type=“number” min=”0” max=“100” step=“10”] → 数値入力フォームにinputタグ type属性にnumberを設定する
                  　　　　　　　　　　　　　　　　　        数値（０ー１００）１０ずつ増える入力フォーム　min→最小値 max→最大値 step→数値や日時を増加する数量
・[ input type=“email” ] → Androidだとボードがメアド入力に変わる
・[ input type=“tel” ] → Androidでボードが電話番号ようになる
・[ “date” ] → 日付を作るタグ　ex.month, 
・[ “time” ] → 時間設定タグ
                                                                                   
[ 進捗状況を表現する]
・[ progress value=“” max=“” ] → 進捗状況を表現するタグ　max →総作業量 valure → 作業の進捗状況
　                                                                                      
[ 入力チェック （バリデーション）]
・[ required ] → 入力フォームに空で送信された場合にメッセージを表示させるために使われる属性（ブラウザによってメッセージの表示が変わる）「 input name=“required” required 」
・[ input type=“入力フォームの値” name=“max-min” min=“5” max=“10” ] → 5-10の値を送信できるように数字以外になっていた場合は送信されずにもう一度入力されるようにする
・[ length ] →  入力フォームの文字数制限の際に使う属性      minlength → 最小値, maxlength →最大値 <input name=“length” minlength=“5” maxlength=“10” > → 5文字以上になるため4文字だと再入力通知 10文字以上は入力されない
・[ pattern ] → pattern属性を付与することで、そのマッチさせたいものをマッチさせる　pattern=“HTML5” でないと送信することができずにバリデーションがかかる
・[ valid, invalid ] → 入力チェック結果をスタイリングする cssへの書き方 input:valid {色を入力させる} input:invalid {色を入力させる}　:valid :invalid
・[ novalidate ] → 子要素にバリデーションがかかっている場合に、それを全体的に無効にしたい場合に親要素に付与する
・[ autocomplete ] → 入力の際に名前など自動で入力補助してもらえる 自動で下に出てくる <input type=“name” autocomplete=“name” required > ブラウザによって変わる
